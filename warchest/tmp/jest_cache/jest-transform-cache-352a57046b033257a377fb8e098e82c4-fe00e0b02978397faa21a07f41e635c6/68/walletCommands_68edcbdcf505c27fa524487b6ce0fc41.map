{"version":3,"names":["ora","require","default","chalk","EventBus","addWallet","listWallets","resyncWallet","scanWallet","calculatePnl","registerWalletCommands","program","walletCmd","command","description","action","name","spinner","start","walletRecord","succeed","green","publicKey","emit","error","fail","red","message","wallets","stop","forEach","w","console","log","cyan","pubkey","data","bold","table","summary","realized","unrealized","total","totalInvested","averageBuyAmount","totalWins","totalLosses","winPercentage","lossPercentage","Object","entries","tokens","mint","tok","underline","holding","held","sold","total_sold","total_invested","average_buy_amount","current_value","cost_basis","module","exports"],"sources":["walletCommands.js"],"sourcesContent":["/**\n * @module cli/walletCommands\n * @see README.md#usage\n */\n\nconst ora = require('ora').default;\nconst chalk = require('chalk').default;\nconst EventBus = require('../core/eventBus');\nconst {\n  addWallet,\n  listWallets,\n  resyncWallet,\n  scanWallet,\n  calculatePnl\n} = require('../core/warchest');\n\n/**\n * Register wallet commands to the CLI.\n * @param {import('commander').Command} program - The commander program instance.\n */\nfunction registerWalletCommands(program) {\n  const walletCmd = program\n    .command('wallet')\n    .description('Manage wallets');\n\n  walletCmd\n    .command('add <name>')\n    .description('Add a new wallet by name')\n    .action(async (name) => {\n      const spinner = ora(`Adding wallet ${name}`).start();\n      try {\n        const walletRecord = await addWallet(name);\n        spinner.succeed(chalk.green(`Wallet added: ${walletRecord.publicKey}`));\n        EventBus.emit('wallet.add', { name: walletRecord.name, publicKey: walletRecord.publicKey });\n      } catch (error) {\n        spinner.fail(chalk.red(error.message));\n      }\n    });\n\n  walletCmd\n    .command('list')\n    .description('List all wallets')\n    .action(async () => {\n      const spinner = ora('Listing wallets').start();\n      try {\n        const wallets = await listWallets();\n        spinner.stop();\n        wallets.forEach((w) => {\n          console.log(chalk.cyan(`${w.name}: ${w.publicKey}`));\n        });\n        EventBus.emit('wallet.list', wallets);\n      } catch (error) {\n        spinner.fail(chalk.red(error.message));\n      }\n    });\n\n  walletCmd\n    .command('resync <name>')\n    .description('Resynchronize a wallet')\n    .action(async (name) => {\n      const spinner = ora(`Resyncing wallet ${name}`).start();\n      try {\n        await resyncWallet(name);\n        spinner.succeed(chalk.green(`Wallet resynced: ${name}`));\n        EventBus.emit('wallet.resync', { name });\n      } catch (error) {\n        spinner.fail(chalk.red(error.message));\n      }\n    });\n\n  walletCmd\n    .command('scan <pubkey>')\n    .description('Scan a wallet by public key')\n    .action(async (pubkey) => {\n      const spinner = ora(`Scanning wallet ${pubkey}`).start();\n      try {\n        await scanWallet(pubkey);\n        spinner.succeed(chalk.green(`Wallet scanned: ${pubkey}`));\n        EventBus.emit('wallet.scan', { publicKey: pubkey });\n      } catch (error) {\n        spinner.fail(chalk.red(error.message));\n      }\n    });\n\n  walletCmd\n    .command('pnl <name>')\n    .description('Calculate P&L for a wallet')\n    .action(async (name) => {\n      const spinner = ora(`Calculating P&L for ${name}`).start();\n      try {\n        const data = await calculatePnl(name);\n        spinner.succeed(chalk.green(`P&L for ${name}`));\n\n        // Summary table\n        console.log(chalk.bold('\\nSummary:'));\n        console.table([{\n          'Realized': data.summary.realized,\n          'Unrealized': data.summary.unrealized,\n          'Total': data.summary.total,\n          'Total Invested': data.summary.totalInvested,\n          'Average Buy Amount': data.summary.averageBuyAmount,\n          'Total Wins': data.summary.totalWins,\n          'Total Losses': data.summary.totalLosses,\n          'Win %': data.summary.winPercentage,\n          'Loss %': data.summary.lossPercentage,\n        }]);\n\n        // Per-token breakdown\n        console.log(chalk.bold('\\nTokens:'));\n        Object.entries(data.tokens).forEach(([mint, tok]) => {\n          console.log(chalk.underline(mint));\n          console.table([{\n            'Holding': tok.holding,\n            'Held': tok.held,\n            'Sold': tok.sold,\n            'Realized': tok.realized,\n            'Unrealized': tok.unrealized,\n            'Total': tok.total,\n            'Total Sold': tok.total_sold,\n            'Total Invested': tok.total_invested,\n            'Avg Buy Amt': tok.average_buy_amount,\n            'Current Value': tok.current_value,\n            'Cost Basis': tok.cost_basis,\n          }]);\n        });\n\n        EventBus.emit('wallet.pnl', { name, summary: data.summary, tokens: data.tokens });\n      } catch (error) {\n        spinner.fail(chalk.red(error.message));\n      }\n    });\n}\n\nmodule.exports = registerWalletCommands;"],"mappings":"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","ignoreList":[]}